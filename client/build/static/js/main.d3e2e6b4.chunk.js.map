{"version":3,"sources":["Chat.js","actions/chatActions.js","actions/types.js","actions/authAction.js","Login.js","Register.js","Dashboard.js","Navigation.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/chatReducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","margin","background","backgroundImage","guest","textAlign","sender","chatWindow","display","flexDirection","width","height","overflowY","chatBox","marginTop","& label.Mui-focused","color","&.Mui-focused fieldset","borderColor","button","left","rightIcon","marginLeft","chip","connect","state","auth","chat","getMessages","userId","guestId","dispatch","axios","post","then","result","type","payload","data","catch","err","console","log","sendMessage","messageInfo","getAllMessages","messages","props","isAuth","history","push","socket","user","id","_useState","useState","_useState2","Object","slicedToArray","message","setMessage","_useState3","_useState4","guestname","setGuestName","_useState5","_useState6","username","setUserName","_useState7","_useState8","setGuestId","_useState9","_useState10","chatmessages","setChatMessages","guestInitials","split","map","name","join","userInitials","sortedMessages","sort","a","b","createdAt","useEffect","location","_props$location$state","io","classes","react_default","createElement","Paper","className","Typography","variant","component","from","_id","toString","key","Chip","avatar","Avatar","label","TextField","onChange","e","target","value","Button","onClick","preventDefault","to","on","Icon","setCurrentUser","decodedToken","card","textField","marginRight","login","token","localStorage","setItem","jwtDecode","password","setPassword","Card","CardContent","required","paper","position","backgroundColor","palette","boxShadow","shadows","outline","rand","Math","round","random","getModalStyle","top","concat","transform","Register","setName","setResult","openModal","setOpenModal","_useState11","modalStyle","Modal","aria-labelledby","aria-describedby","open","onClose","style","container","alignItems","overflowX","&:hover","primary","light","pointerEvents","MySnackbarContentWrapper","other","objectWithoutProperties","SnackbarContent","assign","getUsers","get","clearChat","usersChat","users","filter","email","pathname","withRouter","logout","removeItem","_React$useState","React","_React$useState2","setValue","square","Tabs","indicatorColor","textColor","event","newValue","Tab","App","react_router_dom","src_Navigation","react_router","exact","path","Dashboard","Chat","Login","Boolean","window","hostname","match","initialState","authReducer","arguments","length","undefined","action","objectSpread","entries","constructor","rootReducers","combineReducers","chatReducer","middleWare","thunk","store","createStore","compose","applyMiddleware","apply","app","es","src_App","getItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3e2e6b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport io from \"socket.io-client\";\r\nimport { getMessages, sendMessage, getAllMessages } from \"./actions/chatActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    margin: \"50px\"\r\n  },\r\n  background: {\r\n    backgroundImage: \"url('./email-pattern.png')\"\r\n  },\r\n  guest: {\r\n    textAlign: \"left\"\r\n  },\r\n  sender: {\r\n    textAlign: \"right\"\r\n  },\r\n  chatWindow: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"400px\",\r\n    padding: \"20px\",\r\n    overflowY: \"auto\"\r\n  },\r\n  chatBox: {\r\n    width: \"85%\",\r\n    marginTop: \"5px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\"\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      borderColor: \"green\"\r\n    }\r\n  },\r\n  button: {\r\n    width: \"10%\",\r\n    height: \"50px\",\r\n    left: \"10px\",\r\n    marginTop: \"5px\"\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Chat = (props) => {\r\n\r\n  const { isAuth } = props.auth;\r\n  if (!isAuth) {\r\n    props.history.push('/login');\r\n  }\r\n\r\n  const userId = props.auth.user.id;\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [guestname, setGuestName] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n  const [guestId, setGuestId] = useState(\"\");\r\n\r\n  const [chatmessages, setChatMessages] = useState([]);\r\n\r\n  const guestInitials = guestname.split(\" \").map(name => name[0]).join(\"\");\r\n  const userInitials = username.split(\" \").map(name => name[0]).join(\"\");\r\n\r\n  const { messages } = props.chat;\r\n  const sortedMessages = messages.sort((a, b) => a.createdAt < b.createdAt ? -1 : 1);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const { id, name } = props.location.state;\r\n      setGuestName(name);\r\n      setUserName(props.auth.user.name);\r\n      setGuestId(id);\r\n      props.getMessages(props.auth.user.id, id);\r\n\r\n      setChatMessages(sortedMessages);\r\n    }\r\n    else {\r\n      props.history.push('/');\r\n    }\r\n  }, []);\r\n\r\n\r\n  let socket;\r\n  if (!socket) {\r\n    socket = io(\":5000\");\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    const messageInfo = {\r\n      to: guestId,\r\n      from: userId,\r\n      message: message\r\n    };\r\n    props.sendMessage(messageInfo);\r\n    socket.on(\"chat message\", data => {\r\n      props.getMessages(props.auth.user.id,props.location.state.id);\r\n      setChatMessages(sortedMessages)\r\n   })\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h4\">\r\n          Chat Application\r\n        </Typography>\r\n        <Typography component=\"p\">{guestname}</Typography>\r\n        <div className={classes.background}>\r\n          <div className={classes.chatWindow}>\r\n            {chatmessages.map(message => (\r\n              (message.from._id.toString() === guestId.toString()) ?\r\n                <div key={message._id} className={classes.guest}>\r\n                  <Chip\r\n                    avatar={<Avatar>{guestInitials}</Avatar>}\r\n                    label={message.message}\r\n                    className={classes.chip}\r\n                    color=\"primary\"\r\n                  />\r\n                </div> :\r\n                <div key={message._id} className={classes.sender}>\r\n                  <Chip\r\n                    avatar={<Avatar>{userInitials}</Avatar>}\r\n                    label={message.message}\r\n                    className={classes.chip}\r\n                    color=\"secondary\"\r\n                  />\r\n                </div>\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n        <div className={classes.chatBox}>\r\n          <TextField\r\n            className={classes.chatBox}\r\n            label=\"Send message\"\r\n            variant=\"outlined\"\r\n            id=\"mui-theme-provider-outlined-input\"\r\n            onChange={e => setMessage(e.target.value)}\r\n            value={message}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={handleSubmit}\r\n          >\r\n            Send\r\n            {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\r\n            <Icon className={classes.rightIcon}>send</Icon>\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getMessages, sendMessage, getAllMessages })(Chat);\r\n","import axios from 'axios';\r\nimport { GET_MESSAGES, CLEAR_CHAT, SEND_MESSAGE } from './types';\r\n\r\nexport const getMessages = (userId, guestId) => dispatch => {\r\n    axios\r\n        .post(\"/getmessages\", {\r\n            userId: userId,\r\n            guestId: guestId\r\n        })\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const sendMessage = (messageInfo) => dispatch => {\r\n    axios\r\n        .post(\"/sendmessage\", messageInfo)\r\n        .then(result => {\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n\r\nexport const getAllMessages = (messages) => dispatch => {\r\n    dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const clearChat = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_CHAT,\r\n        payload: []\r\n    })\r\n}","export const SET_CURRENT_USER=\"SET_CURRENT_USER\";\r\nexport const GET_USERS=\"GET_USERS\";\r\nexport const GET_MESSAGES=\"GET_MESSAGES\";\r\nexport const SEND_MESSAGE=\"SEND_MESSAGE\";\r\nexport const CLEAR_CHAT=\"CLEAR_CHAT\";","import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {SET_CURRENT_USER,GET_USERS} from './types';\r\n\r\nexport const getUsers=()=>dispatch=>{\r\n  axios.get(\"/getusers\")\r\n  .then(result=>{\r\n    dispatch({\r\n      type:GET_USERS,\r\n      payload:result.data\r\n    })\r\n  })\r\n  .catch(err=>{\r\n    console.log(err);\r\n  })\r\n}\r\n\r\nexport const login = (user,props) => dispatch=> {\r\n  axios\r\n    .post(\"/login\", user)\r\n    .then(result => {\r\n      const { token } = result.data;\r\n      localStorage.setItem('token',token);\r\n      const decodedToken = jwtDecode(token);\r\n      dispatch(setCurrentUser(decodedToken));\r\n      props.history.push('/');\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const setCurrentUser = (decodedToken) => {\r\n    return{\r\n      type:SET_CURRENT_USER,\r\n      payload:decodedToken\r\n    }\r\n};\r\n\r\nexport const logout=(props)=>dispatch=>{\r\n  localStorage.removeItem('token');\r\n  dispatch(setCurrentUser({}));\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {login} from './actions/authAction';\r\nimport {connect} from 'react-redux';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card:{\r\n    width:\"500px\",\r\n    height:\"300px\",\r\n    display:\"inline-block\",\r\n    margin:\"200px\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\"\r\n  },\r\n  button:{\r\n    marginTop:theme.spacing(5)\r\n  }\r\n}));\r\n\r\nconst Login=(props)=> {\r\n  if(props.auth.isAuth){\r\n    props.history.push('/');\r\n  }\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const user={\r\n    username:username,\r\n    password:password\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n     props.login(user,props);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <TextField\r\n          required\r\n          label=\"Username\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={e => setUserName(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={handleSubmit}\r\n        >\r\n          Login\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n  auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{login})(Login);\r\n\r\n","import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card:{\r\n    width:\"500px\",\r\n    height:\"400px\",\r\n    display:\"inline-block\",\r\n    margin:\"200px\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\"\r\n  },\r\n  button:{\r\n    marginTop:theme.spacing(5)\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n  }\r\n}));\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nexport default function Register(props) {\r\n  const [name,setName]=useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [result,setResult] = useState(\"\")\r\n\r\n  const [openModal,setOpenModal] = useState(false);\r\n\r\n  const [modalStyle] =useState(getModalStyle);\r\n\r\n  const handleSubmit = e => {\r\n    axios.post('http://localhost:5000/register',{\r\n      name:name,\r\n      username:username,\r\n      password:password\r\n    })\r\n    .then(result=>{\r\n      setResult(result.data.message);\r\n      setOpenModal(true);\r\n      props.history.push(\"/login\");\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={openModal}\r\n        onClose={()=>setOpenModal(false)}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Typography variant=\"h6\" id=\"modal-title\">\r\n            {result}\r\n          </Typography>\r\n        </div>\r\n      </Modal>\r\n      <CardContent>\r\n      <TextField\r\n          required\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          label=\"Username\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={e => setUserName(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={handleSubmit}\r\n        >\r\n          Register\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { getUsers } from \"./actions/authAction\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport {clearChat} from \"./actions/chatActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n    padding: \"2rem 0\",\r\n    backgroundImage: \"url('./chatList.png')\"\r\n  },\r\n  root: {\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    marginTop: theme.spacing(10),\r\n    marginLeft: \"30%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    // backgroundColor:green[600],\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.light,\r\n      pointerEvents: 'cursor'\r\n    }\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className].join(\" \")}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          {message}\r\n        </span>\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nconst Dashboard = props => {\r\n  const {isAuth}=props.auth;\r\n  if(!isAuth){\r\n    props.history.push('/login');\r\n  }\r\n  useEffect(() => {\r\n    props.clearChat();\r\n    props.getUsers();\r\n  }, []); // Works as componentDidMount lifecycle method of React class\r\n\r\n  const { users } = props.auth;\r\n  const usersChat = users.filter(user => user.name !== props.auth.user.name);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h4\">\r\n          Available Users\r\n        </Typography>\r\n        <div className={classes.container}>\r\n          {usersChat.map(user => (\r\n            <MySnackbarContentWrapper\r\n             key={user.email}\r\n              variant=\"info\"\r\n              className={classes.margin}\r\n              message={user.name}\r\n              onClick={() => props.history.push({\r\n                pathname: '/chat',\r\n                state: {\r\n                  id: user._id,\r\n                  name: user.name\r\n                }\r\n              })}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUsers,clearChat }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './actions/authAction';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => {\r\n    const [value, setValue] = React.useState(1);\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n    const { isAuth } = props.auth;\r\n\r\n    return (\r\n        <Paper square>\r\n            <Tabs value={value} indicatorColor=\"primary\" textColor=\"primary\" onChange={handleChange}>\r\n                {isAuth ?\r\n                    <Tab label=\"Dashboard\" onClick={() => props.history.push('/')} /> : null}\r\n                {\r\n                    (!isAuth) ?\r\n                        <div>\r\n                            <Tab label=\"Login\" onClick={() => props.history.push('/login')} />\r\n                            <Tab label=\"Register\" onClick={() => props.history.push('/Register')} />\r\n                        </div> :\r\n                        <Tab label=\"Logout\" onClick={() => props.logout()} />\r\n                }\r\n            </Tabs>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, { logout })(Navigation));","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport Register from './Register';\nimport Dashboard from './Dashboard';\nimport Navigation from './Navigation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navigation />\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {SET_CURRENT_USER,GET_USERS} from '../actions/types';\r\n\r\nconst initialState={\r\n    isAuth:false,\r\n    user:{},\r\n    users:[]\r\n}\r\n\r\nconst authReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                isAuth:!(Object.entries(action.payload).length === 0 && action.payload.constructor === Object),\r\n                user:action.payload\r\n            }\r\n\r\n        case GET_USERS:\r\n            return{\r\n                ...state,\r\n                users:Object.assign(state.users,action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {GET_MESSAGES,CLEAR_CHAT,SEND_MESSAGE} from '../actions/types';\r\n\r\nconst initialState={\r\n    messages:[]\r\n}\r\n\r\nconst authReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case GET_MESSAGES:\r\n            return{\r\n                messages:Object.assign(state.messages,action.payload)\r\n            }\r\n\r\n\r\n        case CLEAR_CHAT:\r\n            return{\r\n                messages:action.payload\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore,combineReducers,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './reducers/authReducer';\nimport chatReducer from './reducers/chatReducer';\nimport {setCurrentUser} from './actions/authAction';\nimport jwtDecode from 'jwt-decode';\n\nconst rootReducers=combineReducers({\n    auth:authReducer,\n    chat:chatReducer\n})\n\nconst middleWare=[thunk];\n\nconst initialState={}\n\nconst store=createStore(\n    rootReducers,\n    initialState,\n    compose(\n        applyMiddleware(...middleWare),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nconst app=(\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nif(localStorage.getItem('token')){\n    const token = localStorage.getItem('token');\n    const decodedToken=jwtDecode(token);\n    store.dispatch(setCurrentUser(decodedToken));\n}\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}